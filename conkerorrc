add_delicious_webjumps ("tiagosab");
url_remoting_fn=load_url_in_new_buffer;
define_webjump("t", "http://www.cnrtl.fr/definition/%s");
define_webjump("gcode", "http://www.google.com/codesearch?q=%s&hl=en&btnG=Search+Code");
define_webjump("py", "http://www.google.com/search?hl=en&q=site%3Apython.org+%s&btnG=Search");
define_webjump("dbug", "http://bugs.debian.org/%s");
define_webjump("marx", "http://www.google.com/search?hl=en&ie=utf8&oe=utf8&as_sitesearch=www.marxists.org&as_q=%s");
define_webjump("gf", "http://www.google.fr/search?hl=fr&q=%s&ie=utf8&oe=utf8&lr=fr");
define_webjump("gp", "http://www.google.com/search?hl=pt_br&q=%s&ie=utf8&oe=utf8&lr=pt");
define_webjump("glucky", "http://www.google.com/search?hl=en&q=%s&btnI");
define_webjump("d2f", "http://dict.leo.org/?lp=frde&search=%s");
define_webjump("mail", "http://mail.google.com");
define_webjump("news", "http://news.google.com");
define_webjump("fb", "http://www.facebook.com");
define_webjump("tw", "http://www.twitter.com");
//define_webjump("", "");

require("page-modes/wikipedia.js");
wikipedia_webjumps_format = "w%s"; // controls the names of the webjumps.  default is "wikipedia-%s".
define_wikipedia_webjumps("en", "de", "fr", "pt"); // For English, German and French.
// define_wikipedia_webjumps(); // To make use of ALL of the webjumps (200+).

require("page-modes/gmail.js")
require("page-modes/google-search-results.js")
require("page-modes/youtube.js")
//;require("extensions/adblockplus.js")

read_url_handler_list = [read_url_make_default_webjump_handler("glucky")];

// TS:2011-03-08 Switch to recent buffer
// From conkeror.org/Tips
minibuffer.prototype.read_recent_buffer = function () {
    var window = this.window;
    var buffer = this.window.buffers.current;
    keywords(arguments, $prompt = "Buffer:",
             $default = buffer,
             $history = "buffer");
    var buffers = window.buffers.buffer_list.slice(0);
    buffers.push(buffers.shift());
    var completer = all_word_completer(
        $completions = buffers,
        $get_string = function (x) x.title,
        $get_description = function (x) x.description);
    var result = yield this.read(
        $keymap = read_buffer_keymap,
        $prompt = arguments.$prompt,
        $history = arguments.$history,
        $completer = completer,
        $match_required = true,
        $auto_complete = "buffer",
        $auto_complete_initial = true,
        $auto_complete_delay = 0,
        $default_completion = arguments.$default);
    yield co_return(result);
};

interactive("switch-to-recent-buffer",
            "Switch to a buffer specified in the minibuffer.  List of buffers "+
            "will be ordered by recency.",
            function (I) {
                switch_to_buffer(
                    I.window,
                    (yield I.minibuffer.read_recent_buffer(
                         $prompt = "Switch to buffer:",
                         $default = (I.window.buffers.count > 1 ?
                                     I.window.buffers.buffer_list[1] :
                                     I.buffer))));
            });

define_key(default_global_keymap, "C-x B", "switch-to-recent-buffer");
define_key(default_global_keymap, "C-tab", "switch-to-recent-buffer");
define_key(read_buffer_keymap, "C-tab", "minibuffer-complete");
define_key(read_buffer_keymap, "C-S-tab", "minibuffer-complete-previous");
// END TS

// TS 2011-03-08 - From conkeror.org/Tips:
// Remember last save directory for downloads
{
   let _save_path = get_home_directory();

   function update_save_path(info) {
       _save_path = info.target_file.parent.path;
   }

   add_hook("download_added_hook", update_save_path);

   suggest_save_path_from_file_name = function (filename, buffer) {
       let file = make_file(_save_path);
       file.append(filename);
       return file.path;
   }
}
// End TS

// TS 2011-03-08 - From conkeror.org/Tips:
// Darken current page
function darken_page (I) {
    var styles='* { background: black !important; color: grey !important; }'+
        ':link, :link * { color: #4986dd !important; }'+
        ':visited, :visited * { color: #d75047 !important; }';
    var document = I.buffer.document;
    var newSS=document.createElement('link');
    newSS.rel='stylesheet';
    newSS.href='data:text/css,'+escape(styles);
    document.getElementsByTagName("head")[0].appendChild(newSS);
}

interactive("darken-page", "Darken the page in an attempt to save your eyes.",
            darken_page);

define_key(content_buffer_normal_keymap, "C-d", "darken-page");
//END TS

// TS 2011-03-08 - From conkeror.org/Tips:
// Open url from history:
define_browser_object_class(
    "history-url", null, 
    function (I, prompt) {
        check_buffer (I.buffer, content_buffer);
        var result = yield I.buffer.window.minibuffer.read_url(
            $prompt = prompt,  $use_webjumps = false, $use_history = true, $use_bookmarks = false);
        yield co_return (result);
    });

interactive("find-url-from-history",
            "Find a page from history in the current buffer",
            "find-url",
            $browser_object = browser_object_history_url);

interactive("find-url-from-history-new-buffer",
            "Find a page from history in the current buffer",
            "find-url-new-buffer",
            $browser_object = browser_object_history_url);

define_key(content_buffer_normal_keymap, "h", "find-url-from-history-new-buffer");
define_key(content_buffer_normal_keymap, "H", "find-url-from-history");
//END TS

//TS 2011-03-11 - Set minimum font size, default zoom level
//session_pref ("font.minimum-size.x-western", 18);
function my_zoom_set (buffer) {
    call_after_timeout(function () {
        browser_zoom_set(buffer, false, 200);
    }, 0);
}
//add_hook('create_buffer_hook', my_zoom_set);
//END TS

//TS 2011-03-25 - Enable mouse scrolling without 
// From: https://mail.google.com/mail/?shva=1#mbox/12ec91460bbdebbc
// Here is a hack that works around the problem with isearch by toggling
// the scrollbar on when you start an isearch, and toggling it back off
// when you finish or abort. Care has been taken to write the code in a
// way that shouldn't break things with repeated evaluation, but if you
// read it carefully you will see why there would otherwise be that risk.

var old_isearch_start = (old_isearch_start || isearch_start);
isearch_start = function (window, direction) {
   window.buffers.current.browser.contentWindow.scrollbars.visible = true;
   old_isearch_start(window, direction);
};

var old_isearch_session_destroy = (old_isearch_session_destroy ||
                                  isearch_session.prototype.destroy);
isearch_session.prototype.destroy = function () {
   this.minibuffer.window.buffers.current.browser.contentWindow.scrollbars.visible = false;
   old_isearch_session_destroy.call(this);
};
//END TS