# -*-shell-script-*-
#
# both ~/.bashrc and ~/.bash_profile are symbolic links to this
# file. I have the same settings for login and non-login shells.
#

# debug
# set -x

# If not running interactively, don't do anything
# [ -z "$PS1" ] && return
[ "$(echo $- | grep -c i)" == 0 ] && return

# if we are not in screen, start it.
if [ "x$TERM" != "xscreen" -a "x$NOSCREEN" != "xTRUE" ] 
then
    for f in $HOME/etc/bash.d/local/*
    do
        . "$f"
    done
fi

# Disable C-s/C-q (xon/xoff flow control)
stty stop undef
stty start undef

#   ---*--- HISTORY ---*---
# don't put duplicate lines and lines beginning with space in the history. See bash(1) for more options
export HISTCONTROL=ignoreboth
# don't put these commands in history
export HISTIGNORE=exit:ls:[bf]g
export HISTSIZE=10000
export HISTFILESIZE=10000
shopt -s histappend

#   ---*--- LESS ---*---
# make less more friendly for non-text input files, see lesspipe(1)
# [ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"
# downloaded lesspipe from somwhere on the net...
#
# for downloaded lesspipe:
# export LESSOPEN="|/usr/local/bin/lesspipe.sh %s"
# for source-highlight
# export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
# for highlight
# export LESSOPEN="|/usr/bin/highlight -A %s"
# for internal lesspipe
export LESSOPEN="| /usr/bin/lesspipe %s";
export LESSCLOSE="/usr/bin/lesspipe %s %s";
export LESS='--RAW-CONTROL-CHARS -M --tabs=4'

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
linux|xterm-color|rxvt*|xterm)
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    ;;
screen)
    if [ -n $WINDOW ]
    then
        SCR1='\[\033[01:35m\]'"${WINDOW}]" # include screenname in prompt
    fi
    PS_SCREEN='\[\033k\033\\\]'"$SCR1" # sets shelltitle to the running command in screen
    PS1="$PS_SCREEN"'${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    ;;
*)
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    ;;
esac

# Comment in the above and uncomment this below for a color prompt
# PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*|screen)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# set PATH so it includes user's private bin if it exists
if [ -d ~/bin ] ; then
    PATH=~/bin:"${PATH}"
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# variables
export PYTHONPATH='/home/tiago/lib/python'
export DEBFULLNAME='Tiago Saboga'
export DEBEMAIL='tiagosaboga@gmail.com'
export EDITOR='emacsclient -nw'
export VISUAL='emacsclient -nw'

PROJECT_PARENT_DIRS[0]="$HOME/home/aulasfran/alunos"
PROJECT_PARENT_DIRS[1]="$HOME/home"
PROJECT_PARENT_DIRS[2]="$HOME/src"

#   ---*--- SSH ---*---
SSH_ENV="$HOME/.ssh/environment"
function start_agent {
     echo "Initialising new SSH agent..."
     /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
     echo succeeded
     chmod 600 "${SSH_ENV}"
     . "${SSH_ENV}" > /dev/null
     /usr/bin/ssh-add;
}
# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
     . "${SSH_ENV}" > /dev/null
     #ps ${SSH_AGENT_PID} doesnâ€™t work under cywgin
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
         start_agent;
     }
else
     start_agent;
fi 

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/etc/bash_aliases ]; then
    . ~/etc/bash_aliases
fi

if [ -f ~/etc/bash_functions ]; then
    . ~/etc/bash_functions
fi

# Start emacs if not done.

emacsclient -e '(message "Contacting home.")' >/dev/null || emacs -daemon &

#  ----*---- tex/latex settings ----*----
# set my tex home
export TEXMFHOME=${HOME}/lib/tex
